// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/ory-am/fosite/handler/oidc (interfaces: OpenIDConnectTokenStrategy)

package internal

import (
	http "net/http"

	gomock "github.com/golang/mock/gomock"
	fosite "github.com/ory-am/fosite"
	context "golang.org/x/net/context"
)

// Mock of OpenIDConnectTokenStrategy interface
type MockOpenIDConnectTokenStrategy struct {
	ctrl     *gomock.Controller
	recorder *_MockOpenIDConnectTokenStrategyRecorder
}

// Recorder for MockOpenIDConnectTokenStrategy (not exported)
type _MockOpenIDConnectTokenStrategyRecorder struct {
	mock *MockOpenIDConnectTokenStrategy
}

func NewMockOpenIDConnectTokenStrategy(ctrl *gomock.Controller) *MockOpenIDConnectTokenStrategy {
	mock := &MockOpenIDConnectTokenStrategy{ctrl: ctrl}
	mock.recorder = &_MockOpenIDConnectTokenStrategyRecorder{mock}
	return mock
}

func (_m *MockOpenIDConnectTokenStrategy) EXPECT() *_MockOpenIDConnectTokenStrategyRecorder {
	return _m.recorder
}

func (_m *MockOpenIDConnectTokenStrategy) GenerateIDToken(_param0 context.Context, _param1 *http.Request, _param2 fosite.Requester) (string, error) {
	ret := _m.ctrl.Call(_m, "GenerateIDToken", _param0, _param1, _param2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockOpenIDConnectTokenStrategyRecorder) GenerateIDToken(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GenerateIDToken", arg0, arg1, arg2)
}
